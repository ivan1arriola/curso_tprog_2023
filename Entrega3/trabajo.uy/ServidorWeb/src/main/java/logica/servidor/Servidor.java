
package logica.servidor;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.jws.soap.SOAPBinding;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.FaultAction;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.0
 * Generated source version: 3.0
 * 
 */
@WebService(name = "Servidor", targetNamespace = "http://servidor.logica/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Servidor {


    /**
     * 
     * @param arg0
     * @return
     *     returns logica.servidor.DtUsuario
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor.logica/Servidor/obtenerDatosUsuarioRequest", output = "http://servidor.logica/Servidor/obtenerDatosUsuarioResponse")
    public DtUsuario obtenerDatosUsuario(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor.logica/Servidor/validarCredencialesRequest", output = "http://servidor.logica/Servidor/validarCredencialesResponse")
    public boolean validarCredenciales(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns logica.servidor.WrapperLista
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor.logica/Servidor/listarComprasPaqueteRequest", output = "http://servidor.logica/Servidor/listarComprasPaqueteResponse")
    public WrapperLista listarComprasPaquete(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @throws ExcepcionKeywordVacia_Exception
     * @throws ExceptionValidezNegativa_Exception
     */
    @WebMethod
    @Action(input = "http://servidor.logica/Servidor/cargarDatosRequest", output = "http://servidor.logica/Servidor/cargarDatosResponse", fault = {
        @FaultAction(className = ExceptionValidezNegativa_Exception.class, value = "http://servidor.logica/Servidor/cargarDatos/Fault/ExceptionValidezNegativa"),
        @FaultAction(className = ExcepcionKeywordVacia_Exception.class, value = "http://servidor.logica/Servidor/cargarDatos/Fault/ExcepcionKeywordVacia")
    })
    public void cargarDatos()
        throws ExcepcionKeywordVacia_Exception, ExceptionValidezNegativa_Exception
    ;

    /**
     * 
     * @return
     *     returns logica.servidor.WrapperLista
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor.logica/Servidor/listarNicknamesUsuariosRequest", output = "http://servidor.logica/Servidor/listarNicknamesUsuariosResponse")
    public WrapperLista listarNicknamesUsuarios();

    /**
     * 
     * @return
     *     returns logica.servidor.WrapperLista
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor.logica/Servidor/listarTipoDePublicacionesRequest", output = "http://servidor.logica/Servidor/listarTipoDePublicacionesResponse")
    public WrapperLista listarTipoDePublicaciones();

}
